pipeline {
  agent {
    kubernetes {
      label 'petclinic-cd'
      yamlFile 'jenkins-agent-pod.yaml'
    }
  }

  environment {
    REGISTRY_URL = '54.180.16.187:8000'
    REGISTRY_CREDENTIALS = 'Harbor-docker-registry'
    APP_IMAGE = null
    IMAGE_REPO = 'repo-spring-petclinic-rest'
    IMAGE_NAME = 'spring-petclinic-rest'
    IMAGE_TAG = sh(returnStdout: true, script: '(git rev-parse --short HEAD && echo "_$BUILD_NUMBER") | tr -d "\n"').trim()
    APP_URL='http://ad023ff3956274e04a524f6dfe08fbe1-3c32bf7bdf2ae59d.elb.ap-northeast-2.amazonaws.com/petclinic'
    APP_PORT=80
    PerfURL='ad023ff3956274e04a524f6dfe08fbe1-3c32bf7bdf2ae59d.elb.ap-northeast-2.amazonaws.com'
  }

  stages {
     
       stage('API Test') {
      steps {
        container('jmeter') {
          
          git url: 'https://github.com/skccdevops03/spring-petclinic-rest.git',
                  credentialsId: 'git_skccdevops03',
                    branch: 'master'
                    
          sh """
            JVM_ARGS="-Xms1G -Xmx1G" && export JVM_ARGS && /usr/local/jmeter/apache-jmeter-5.4.1/bin/jmeter.sh \
            -n -f -t jenkins/dev/product/jmeter-pipeline/JPetstore.jmx \
            -l jenkins/dev/product/jmeter-pipeline/Result_${BUILD_NUMBER}.jtl \
            -e -o jenkins/dev/product/jmeter-pipeline/result_html_${BUILD_NUMBER}
            newman run api_test.json \
                  --env-var 'baseUrl=${APP_URL}' --env-var 'petTypeId=""'\
                  --reporters cli,junit \
                  --reporter-junit-export 'petclinic-report.xml'
          """
        }
      }
      post {
        always {
          junit 'petclinic-report.xml'
        }
      }
    }    
  }
}
